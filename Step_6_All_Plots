This shows the rest of the plots, with the key information being adjusted but same templated as Acres in 2022.
Tighten it up to tidy it up.
Show the plots.
I added saving the cleaned up data as a .csv because
    I want to have this pool of .csv data to be able to use with future data projects.
    So I don't have to do the data clean-up anymore.

Plotting for Farms in 2022
    plt.subplot(2, 2, 2)
    sns.barplot(data=df_2022_farms_melted, x='Geographic_Area', y='Number_of_Farms', hue='Farm_Type')
    plt.title(f'{fruit_name} Farms in 2022')
    plt.xlabel('Geographic Area')
    plt.ylabel('Number of Farms')
    plt.xticks(rotation=45)
    plt.legend(title='Farm Type')

Plotting for Acres in 2017
    plt.subplot(2, 2, 3)
    sns.barplot(data=df_2017_acres_melted, x='Geographic_Area', y='Acres', hue='Acres_Type')
    plt.title(f'{fruit_name} Acres in 2017')
    plt.xlabel('Geographic Area')
    plt.ylabel('Acres')
    plt.xticks(rotation=45)
    plt.legend(title='Acres Type')

Plotting for Farms in 2017
    plt.subplot(2, 2, 4)
    sns.barplot(data=df_2017_farms_melted, x='Geographic_Area', y='Number_of_Farms', hue='Farm_Type')
    plt.title(f'{fruit_name} Farms in 2017')
    plt.xlabel('Geographic Area')
    plt.ylabel('Number of Farms')
    plt.xticks(rotation=45)
    plt.legend(title='Farm Type')

    plt.tight_layout()
    plt.show()

# Save DataFrame to CSV 
    df.to_csv(f"{fruit_name.lower().replace(' ', '_')}.csv", index=False)
